#:import utils kivy.utils
#:import Factory kivy.factory.Factory

ScreenManagement:
    LogIn_Screen:
        id: login_screen
    After_LogIn_Screen:
        id: after_login_screen

<LogIn_Screen_Label@Label> :
    font_size: 18
    text_size: self.size
    halign: 'right'
    valign: 'center'

<LogIn_Screen_Button@Button> :
    font_size: 18
    background_color: 0, 0, 0, 0
    on_press: self.color = utils.get_color_from_hex('#DA70D6')
    on_release: self.color = 1, 1, 1, 1

<LogIn_Screen_TextInput@TextInput> :
    background_color: 0, 0, 0, 0
    font_size: 18
    cursor_color: 1, 1, 1, 1
    foreground_color: 1, 1, 1, 1

<LogIn_Screen>:
    name: 'LogIn_Screen'
    username: username
    password: password

    canvas.before:
        Rectangle:
            pos: self.pos
            size: self.size
            source: 'sky.jpg'

    BoxLayout:
        orientation: 'vertical'
        spacing: 10

        Label:
            text: 'NEXGEN'
            font_size: 40
            size_hint_y: .3

        GridLayout:
            cols: 2
            pos_hint: {'center_x': .5, 'center_y': .5}
            size_hint: (.25, .14)
            spacing: 10

            LogIn_Screen_Label:
                text: 'UserName : '

            LogIn_Screen_TextInput:
                id: username

            LogIn_Screen_Label:
                text: 'Password : '

            LogIn_Screen_TextInput:
                id: password
                password: True
                password_mask: '*'

        BoxLayout:
            orientation: 'horizontal'
            size_hint: (.1, .05)
            pos_hint: {'center_x':.5}
            spacing: 10

            LogIn_Screen_Button:
                text: 'LogIn'
                on_release: root.Access()

            LogIn_Screen_Button:
                text: 'Reset'
                on_release:
                    username.text = ''
                    password.text = ''

        FloatLayout:

<Add_And_Remove_Button@Button>:
    background_color: 0, 0, 0, 0
    color: (0, 0, 0, 1)
    on_press: self.color = utils.get_color_from_hex('#DA70D6')
    on_release:
        self.color = 0, 0, 0, 1

<Popup_Window> :
    size_hint: (.3, .19)
    spacing: 10

    BoxLayout:
        orientation: 'vertical'
        spacing: 10

        TextInput:
            id: textinput_for_file_name
            font_size: 19

        BoxLayout:
            orientation: 'horizontal'
            spacing: 10

            Button:
                text: 'Confirm'
                on_release:
                    app.root.get_screen('After_LogIn_Screen').Add_File(textinput_for_file_name.text)
                    root.dismiss()

            Button:
                text: 'Cancel'
                on_release: root.dismiss()


<After_LogIn_Screen> :
    name: 'After_LogIn_Screen'
    files_in_boxlayout: files_in_boxlayout
    file_name_label: file_name_label
    file_content: file_content
    save_file: save_file

    GridLayout:
        cols: 2

        Label:
            text: 'NEXGEN'
            font_size: 30
            size_hint: (.42, .15)
            color: (.5, .5, 0, 1)

        Label:
            id: file_name_label
            text: 'File Name'
            size_hint_y: .15
            color: (0, 0, 0, 1)
            font_size: 19

        ScrollView:
            size_hint_x: .42

            BoxLayout:
                id: files_in_boxlayout
                orientation: 'vertical'
                size_hint_y: None
                height: self.minimum_height

        TextInput:
            id: file_content
            font_size: 19

        BoxLayout:
            id: add_and_remove_buttons
            orientation: 'horizontal'
            size_hint: (.42, .15)
            spacing: 20
            padding: 20

            Add_And_Remove_Button:
                text: 'Add'
                on_release:
                    app.root.ids.after_login_screen.popup_window()

        Add_And_Remove_Button:
            id: save_file
            text: 'Save'
            size_hint_y: .15
            font_size: 19
            on_release: root.Save_File()